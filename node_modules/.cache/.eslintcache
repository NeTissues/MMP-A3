[{"C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\index.tsx":"1","C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\App.tsx":"2","C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\pages\\home\\Home.tsx":"3","C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\components\\Footer\\Footer.tsx":"4","C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\components\\Header\\Header.tsx":"5","C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\components\\Form\\Form.tsx":"6","C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\hooks\\useBMICalcResult.ts":"7","C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\hooks\\useBMICalculator.ts":"8","C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\hooks\\useCalorieCalcResult.ts":"9","C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\hooks\\useBFPCalculator.ts":"10","C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\hooks\\useCalorieCalculator.tsx":"11","C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\hooks\\useBFPCalcResult.ts":"12","C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\hooks\\useBMRCalcResult.tsx":"13","C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\hooks\\useBMRCalculator.tsx":"14","C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\hooks\\atom.ts":"15"},{"size":286,"mtime":1684348089662,"results":"16","hashOfConfig":"17"},{"size":448,"mtime":1684348089659,"results":"18","hashOfConfig":"17"},{"size":438,"mtime":1684351250386,"results":"19","hashOfConfig":"17"},{"size":182,"mtime":1684348089661,"results":"20","hashOfConfig":"17"},{"size":259,"mtime":1684348089662,"results":"21","hashOfConfig":"17"},{"size":5710,"mtime":1684854687897,"results":"22","hashOfConfig":"17"},{"size":168,"mtime":1684427922063,"results":"23","hashOfConfig":"17"},{"size":401,"mtime":1684429060390,"results":"24","hashOfConfig":"17"},{"size":180,"mtime":1684426387625,"results":"25","hashOfConfig":"17"},{"size":471,"mtime":1684854074500,"results":"26","hashOfConfig":"17"},{"size":734,"mtime":1684791188421,"results":"27","hashOfConfig":"17"},{"size":168,"mtime":1684853116552,"results":"28","hashOfConfig":"17"},{"size":168,"mtime":1684791188420,"results":"29","hashOfConfig":"17"},{"size":433,"mtime":1684791188420,"results":"30","hashOfConfig":"17"},{"size":396,"mtime":1684851803773,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uzea0e",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\index.tsx",[],[],"C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\App.tsx",[],[],"C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\pages\\home\\Home.tsx",[],[],"C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\components\\Footer\\Footer.tsx",[],[],"C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\components\\Header\\Header.tsx",[],[],"C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\components\\Form\\Form.tsx",["78"],[],"import { useRef, useState } from \"react\"\r\nimport './Form.css'\r\nimport { useCalorieCalculator } from \"../../hooks/useCalorieCalculator\"\r\nimport { useCalorieCountValue } from \"../../hooks/useCalorieCalcResult\"\r\n\r\nimport { useBMICalculator } from \"../../hooks/useBMICalculator\"\r\nimport { useBMICalcResult } from \"../../hooks/useBMICalcResult\";\r\nimport { useBMRCalculator } from \"../../hooks/useBMRCalculator\"\r\nimport { useBMRCountValue } from \"../../hooks/useBMRCalcResult\"\r\n<<<<<<< HEAD\r\nimport { useBFPCalculator } from \"../../hooks/useBFPCalculator\";\r\nimport { useBFPCountValue } from \"../../hooks/useBFPCalcResult\"\r\n=======\r\nimport { useIdealWeightValue } from \"../../hooks/useIdealWeightResult\"\r\nimport { useIdealWeightCalculator } from \"../../hooks/useIdealWeightCalculator\"\r\n>>>>>>> a0e9226bda09d8fbeec2af27fad4c7603e9b4e7a\r\n\r\nconst Form = () => {\r\n    const [weight,setWeight] = useState('')\r\n    const [height,setHeight] = useState(0)\r\n    const [gender,setGender] = useState(0)\r\n    const [activityLevel,setActivityLevel] = useState(0)\r\n    const [age,setAge] = useState(0)\r\n    const inputRef = useRef<HTMLInputElement>(null)\r\n\r\n    const [results,setResults] = useState<undefined|number>(useCalorieCountValue())\r\n    const [resultsBMI,setBMIResults] = useState<undefined|number>(useBMICalcResult())\r\n    const [resultsBMR,setBMRResults] = useState<undefined|number>(useBMRCountValue())\r\n<<<<<<< HEAD\r\n    const [resultsBFP,setBFPResults] = useState<undefined|number>(useBFPCountValue())\r\n=======\r\n    const [resultsIW,setIWResults] = useState<undefined|number>(useIdealWeightValue())\r\n>>>>>>> a0e9226bda09d8fbeec2af27fad4c7603e9b4e7a\r\n\r\n    const calculate = useCalorieCalculator()\r\n    const bmi = useBMICalculator()\r\n    const bmr = useBMRCalculator()\r\n<<<<<<< HEAD\r\n    const bfp = useBFPCalculator()\r\n=======\r\n    const iw = useIdealWeightCalculator()\r\n>>>>>>> a0e9226bda09d8fbeec2af27fad4c7603e9b4e7a\r\n    \r\n    const calculateEquations = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault()\r\n        setResults(calculate(weight,height,age,gender,activityLevel))\r\n        setBMIResults(bmi(weight,height))\r\n        setBMRResults(bmr(weight,height,age,gender,activityLevel))\r\n<<<<<<< HEAD\r\n        setBFPResults(bfp(weight,height,age,gender))\r\n=======\r\n        setIWResults(iw(height,gender))\r\n>>>>>>> a0e9226bda09d8fbeec2af27fad4c7603e9b4e7a\r\n    }\r\n\r\n    return (<div className=\"container\">\r\n                <form className=\"group-input-btn\" onSubmit={calculateEquations}>\r\n                    <div>\r\n                        <input\r\n                            ref={inputRef}\r\n                            onChange={event => setWeight(event.target.value)}\r\n                            type=\"text\"\r\n                            placeholder=\"Peso\"\r\n                        />\r\n                        <input\r\n                            ref={inputRef}\r\n                            onChange={event => setHeight(parseInt(event.target.value))}\r\n                            type=\"text\"\r\n                            placeholder=\"Altura\"\r\n                        />\r\n                        <input\r\n                            ref={inputRef}\r\n                            onChange={event => setAge(parseFloat(event.target.value))}\r\n                            type=\"text\"\r\n                            placeholder=\"Idade\"\r\n                        />\r\n                        <select\r\n                            value={gender}\r\n                            onChange={event => setGender(parseInt(event.target.value))}\r\n                            placeholder={'genderInput'}\r\n                        >\r\n                            <option value=\"0\">Selecione</option>\r\n                            <option value=\"1\">Feminino</option>\r\n                            <option value=\"2\">Masculino</option>\r\n                        </select>\r\n                        <select\r\n                            value={activityLevel}\r\n                            onChange={event => setActivityLevel(parseInt(event.target.value))}\r\n                            placeholder={'activityLevelInput'}\r\n                        >\r\n                            <option value=\"0\">Selecione</option>\r\n                            <option value=\"1\">Baixo</option>\r\n                            <option value=\"2\">MÃ©dio</option>\r\n                            <option value=\"3\">Alto</option>\r\n                        </select>\r\n                        <button type=\"submit\" disabled={!weight||!height||(!gender||gender===0)||(!activityLevel||activityLevel===0)||!age}>Calcular</button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"group-input-result\">\r\n                    <label id=\"calorie-count\">Calorias diÃ¡rias recomendadas</label>\r\n                    <input type=\"text\" aria-labelledby='calorie-count' value={results} disabled/>\r\n\r\n                    <label id=\"bmi-count\">Indice de massa corporal</label>\r\n                    <input type=\"text\" aria-labelledby='bmi-count' value={resultsBMI} disabled/>\r\n\r\n                    <label id=\"bmr-count\">Taxa metabÃ³lica basal</label>\r\n                    <input type=\"text\" aria-labelledby='bmr-count' value={resultsBMR} disabled/>\r\n\r\n<<<<<<< HEAD\r\n                    <label id=\"bfp-count\">Percentual de gordura corporal</label>\r\n                    <input type=\"text\" aria-labelledby='bfp-count' value={resultsBFP} disabled/>\r\n=======\r\n                    <label id=\"ideal-weight\">Peso ideal</label>\r\n                    <input type=\"text\" aria-labelledby='ideal-weight' value={resultsIW} disabled/>\r\n>>>>>>> a0e9226bda09d8fbeec2af27fad4c7603e9b4e7a\r\n                </div>\r\n            </div>)\r\n}\r\n\r\nexport default Form","C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\hooks\\useBMICalcResult.ts",[],[],"C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\hooks\\useBMICalculator.ts",[],[],"C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\hooks\\useCalorieCalcResult.ts",[],[],"C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\hooks\\useBFPCalculator.ts",[],[],"C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\hooks\\useCalorieCalculator.tsx",[],[],"C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\hooks\\useBFPCalcResult.ts",[],[],"C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\hooks\\useBMRCalcResult.tsx",[],[],"C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\hooks\\useBMRCalculator.tsx",[],[],"C:\\Users\\Ichigo\\IdeaProjects\\MMP-A3\\src\\hooks\\atom.ts",[],[],{"ruleId":null,"fatal":true,"severity":2,"message":"79","line":10,"column":0},"Parsing error: Merge conflict marker encountered."]