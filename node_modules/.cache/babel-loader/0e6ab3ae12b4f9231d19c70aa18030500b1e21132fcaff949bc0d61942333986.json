{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useSetRecoilState } from \"recoil\";\nimport { bmiCountState } from \"./atom\";\nexport const useBMICalculator = () => {\n  _s();\n  const setBMICount = useSetRecoilState(bmiCountState);\n  return (weight, height) => {\n    let result = Math.round(parseFloat(weight) / (height / 100 * (height / 100))).toFixed(2);\n    setBMICount(parseFloat(result));\n    return parseFloat(result);\n  };\n};\n_s(useBMICalculator, \"mN3VMN7FkY8Q7opPRoA6KfnhOD4=\", false, function () {\n  return [useSetRecoilState];\n});","map":{"version":3,"names":["useSetRecoilState","bmiCountState","useBMICalculator","_s","setBMICount","weight","height","result","Math","round","parseFloat","toFixed"],"sources":["C:/Users/Ichigo/IdeaProjects/MMP-A3/src/hooks/useBMICalculator.ts"],"sourcesContent":["import { useSetRecoilState } from \"recoil\";\r\nimport { bmiCountState } from \"./atom\";\r\n\r\nexport const useBMICalculator = () => {\r\n    const setBMICount = useSetRecoilState(bmiCountState)\r\n\r\n    return (weight:string,height:number,)=>{\r\n        let result = Math.round(parseFloat(weight)/((height/100)*(height/100))).toFixed(2)\r\n        setBMICount(parseFloat(result))\r\n        return parseFloat(result)\r\n    }\r\n}"],"mappings":";AAAA,SAASA,iBAAiB,QAAQ,QAAQ;AAC1C,SAASC,aAAa,QAAQ,QAAQ;AAEtC,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAMC,WAAW,GAAGJ,iBAAiB,CAACC,aAAa,CAAC;EAEpD,OAAO,CAACI,MAAa,EAACC,MAAa,KAAI;IACnC,IAAIC,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACC,UAAU,CAACL,MAAM,CAAC,IAAGC,MAAM,GAAC,GAAG,IAAGA,MAAM,GAAC,GAAG,CAAC,CAAC,CAAC,CAACK,OAAO,CAAC,CAAC,CAAC;IAClFP,WAAW,CAACM,UAAU,CAACH,MAAM,CAAC,CAAC;IAC/B,OAAOG,UAAU,CAACH,MAAM,CAAC;EAC7B,CAAC;AACL,CAAC;AAAAJ,EAAA,CARYD,gBAAgB;EAAA,QACLF,iBAAiB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}