{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useSetRecoilState } from \"recoil\";\nimport { bmiCountState } from \"./atom\";\nexport const useBMICalculator = () => {\n  _s();\n  const setBMICount = useSetRecoilState(bmiCountState);\n  return (weight, height) => {\n    console.log(parseFloat(weight));\n    let result = parseFloat(weight) / (height / 100 ^ 2);\n    setBMICount(result);\n    return result;\n  };\n};\n_s(useBMICalculator, \"mN3VMN7FkY8Q7opPRoA6KfnhOD4=\", false, function () {\n  return [useSetRecoilState];\n});","map":{"version":3,"names":["useSetRecoilState","bmiCountState","useBMICalculator","_s","setBMICount","weight","height","console","log","parseFloat","result"],"sources":["C:/Users/Ichigo/IdeaProjects/MMP-A3/src/hooks/useBMICalculator.ts"],"sourcesContent":["import { useSetRecoilState } from \"recoil\";\r\nimport { bmiCountState } from \"./atom\";\r\n\r\nexport const useBMICalculator = () => {\r\n    const setBMICount = useSetRecoilState(bmiCountState)\r\n\r\n    return (weight:string,height:number,)=>{\r\n        console.log(parseFloat(weight))\r\n        let result = (parseFloat(weight)/((height/100)^2))\r\n        setBMICount(result)\r\n        return result\r\n    }\r\n}"],"mappings":";AAAA,SAASA,iBAAiB,QAAQ,QAAQ;AAC1C,SAASC,aAAa,QAAQ,QAAQ;AAEtC,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAMC,WAAW,GAAGJ,iBAAiB,CAACC,aAAa,CAAC;EAEpD,OAAO,CAACI,MAAa,EAACC,MAAa,KAAI;IACnCC,OAAO,CAACC,GAAG,CAACC,UAAU,CAACJ,MAAM,CAAC,CAAC;IAC/B,IAAIK,MAAM,GAAID,UAAU,CAACJ,MAAM,CAAC,IAAGC,MAAM,GAAC,GAAG,GAAE,CAAC,CAAE;IAClDF,WAAW,CAACM,MAAM,CAAC;IACnB,OAAOA,MAAM;EACjB,CAAC;AACL,CAAC;AAAAP,EAAA,CATYD,gBAAgB;EAAA,QACLF,iBAAiB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}