{"ast":null,"code":"import{useSetRecoilState}from\"recoil\";import{bmiCountState}from\"./atom\";export var useBMICalculator=function useBMICalculator(){var setBMICount=useSetRecoilState(bmiCountState);return function(weight,height){var result=(parseFloat(weight)/(height/100*(height/100))).toFixed(2);setBMICount(parseFloat(result));return parseFloat(result);};};","map":{"version":3,"names":["useSetRecoilState","bmiCountState","useBMICalculator","setBMICount","weight","height","result","parseFloat","toFixed"],"sources":["/home/raphael/Documents/MMP-A3/src/hooks/useBMICalculator.ts"],"sourcesContent":["import { useSetRecoilState } from \"recoil\";\nimport { bmiCountState } from \"./atom\";\n\nexport const useBMICalculator = () => {\n    const setBMICount = useSetRecoilState(bmiCountState)\n\n    return (weight:string,height:number,)=>{\n        let result = (parseFloat(weight)/((height/100)*(height/100))).toFixed(2)\n        setBMICount(parseFloat(result))\n        return parseFloat(result)\n    }\n}"],"mappings":"AAAA,OAASA,iBAAiB,KAAQ,QAAQ,CAC1C,OAASC,aAAa,KAAQ,QAAQ,CAEtC,MAAO,IAAM,CAAAC,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAA,CAAS,CAClC,GAAM,CAAAC,WAAW,CAAGH,iBAAiB,CAACC,aAAa,CAAC,CAEpD,MAAO,UAACG,MAAa,CAACC,MAAa,CAAI,CACnC,GAAI,CAAAC,MAAM,CAAG,CAACC,UAAU,CAACH,MAAM,CAAC,EAAGC,MAAM,CAAC,GAAG,EAAGA,MAAM,CAAC,GAAG,CAAC,CAAC,EAAEG,OAAO,CAAC,CAAC,CAAC,CACxEL,WAAW,CAACI,UAAU,CAACD,MAAM,CAAC,CAAC,CAC/B,MAAO,CAAAC,UAAU,CAACD,MAAM,CAAC,CAC7B,CAAC,CACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}